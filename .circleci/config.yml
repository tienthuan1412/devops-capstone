---
version: 2.1
orbs:
  docker: circleci/docker@2.2.0
  aws-eks: circleci/aws-eks@2.2.0
  kubernetes: circleci/kubernetes@1.3

jobs:
  init:
    docker:
      - image: python:3.7.3-stretch
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "hello_app/requirements.txt" }}
      - run:
          name: Install dependencies
          command: |
            python3 -m venv .devops-capstone
            source .devops-capstone/bin/activate
            make install
      - save_cache:
          paths:
            - ./.devops-capstone
          key: v1-dependencies-{{ checksum "hello_app/requirements.txt" }}
      - run:
          name: Run lint
          command: |
            source .devops-capstone/bin/activate
            make lint 

  deploy:
    docker:
      - image: cimg/aws:2023.05
    steps:
      - checkout
      - run:
          name: Install eksctl
          command: |
            ARCH=amd64
            PLATFORM=$(uname -s)_$ARCH
            curl -sLO "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$PLATFORM.tar.gz"
            tar -xzf eksctl_$PLATFORM.tar.gz -C /tmp && rm eksctl_$PLATFORM.tar.gz
            sudo mv /tmp/eksctl /usr/local/bin
            eksctl version
      - run:
          name: Install kubectl
          command: |
            curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"  
            sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
            kubectl version --client
            aws eks update-kubeconfig --region us-east-1 --name hello
      - run:
          name: Kubectl deploy
          command: |
            DOCKER_HUB_ID="registry.hub.docker.com/zzhanamjchjzz"
            DOCKER_REPOSITORY="hello-app"
            DEPLOYMENT_NAME=${DOCKER_REPOSITORY}
            VERSION=1.000
            CONTAINER_PORT=80
            REPLICAS=4

            dockerpath=${DOCKER_HUB_ID}/${DOCKER_REPOSITORY}:${VERSION}

            kubectl create deployment ${DEPLOYMENT_NAME} --image=${dockerpath} --replicas=${REPLICAS} &&
                kubectl expose deployment/${DEPLOYMENT_NAME} --type="LoadBalancer" --port ${CONTAINER_PORT}

            echo
            echo "Listing deployments"
            kubectl get deployments -o wide
            echo
            echo "Listing services"
            kubectl get services -o wide
            echo
            echo "Listing pods"
            kubectl get pods -o wide       
workflows:
  default:
    jobs:
      - init
      - docker/publish:
          image: zzhanamjchjzz/hello-app
          dockerfile: hello_app/Dockerfile
          tag: latest
          update-description: true
          requires:
            - init
      - deploy:
          requires:
            - docker/publish
